#!/usr/bin/env bash
#===============================================================================
#
#  ________  ________  ________  ___  ___  ________ ___    ___ 
# |\   __  \|\   __  \|\   ____\|\  \|\  \|\  _____|\  \  /  /|
# \ \  \|\ /\ \  \|\  \ \  \___|\ \  \\\  \ \  \__/\ \  \/  / /
#  \ \   __  \ \   __  \ \_____  \ \   __  \ \   __\\ \    / / 
#   \ \  \|\  \ \  \ \  \|____|\  \ \  \ \  \ \  \_| /     \/  
#    \ \_______\ \__\ \__\____\_\  \ \__\ \__\ \__\ /  /\   \  
#     \|_______|\|__|\|__|\_________\|__|\|__|\|__|/__/ /\ __\ 
#                        \|_________|              |__|/ \|__| 
#                                                             
#-------------------------------------------------------------------------------
#$ name:fx-setup
#$ author:qodeninja
#$ date:
#$ semver:
#$ autobuild: 00005
#-------------------------------------------------------------------------------
#=====================================code!=====================================

#-------------------------------------------------------------------------------
# Deps
#-------------------------------------------------------------------------------

#--> sed curl chmod

#-------------------------------------------------------------------------------
# Vars and Paths
#-------------------------------------------------------------------------------
install_home="$HOME/Z_BASHFX_INSTALL"
install_path="$install_home/bin"
profile_src="$HOME/.profile"

#-------------------------------------------------------------------------------
# Term Colors
#-------------------------------------------------------------------------------
col_red="\x1b[38;5;198m"
col_green="\x1b[38;5;34m"
col_orange="\x1b[38;5;208m"
col_blue="\x1b[38;5;32m"
col_end="\x1b[1;0m"

__logo(){
  local logo=$(sed -n '3,12 p' $BASH_SOURCE)
  printf "\n${col_blue}${logo//#/ }${col_end}\n" 1>&2;
}

__printf(){
  local text=${1:-}; 
  [ -n "$text" ] && printf "%b" "${text}\n" 1>&2 || :
}

#-------------------------------------------------------------------------------
# Options
#-------------------------------------------------------------------------------

opt_yes=1
opt_safe=1
opt_debug=1
opt_clean=1
opt_prefix=1
opt_prefix_path=""


while [[ $# -gt 0 ]]; do
  case $1 in
    --safe)
      opt_safe=0;
      shift 
      ;;
    --clean)
      opt_clean=0;
      shift 
      ;;
    --yes)
      opt_yes=0;
      shift 
      ;;
    --debug)
      opt_debug=0;
      shift 
      ;;
    --prefix)
      opt_prefix=0;
      opt_prefix_path="$2";
      shift 
      shift 
      ;;
    *)
      shift 
      ;;
  esac
done

#-------------------------------------------------------------------------------
# Config
#-------------------------------------------------------------------------------

  config_file_str(){
    local data
    data+=""
    data="$(cat <<-EOF
      #!/usr/bin/env bash
      ### bashfx install file ###
      # do not edit
      # created: $(date)
        echo "BASHFX INSTALL CONF IS HERE!"
        export FX_INSTALLED=1
        export FX_DEBUG_MODE=${opt_debug}
        export FX_INSTALL_YES_MODE=${opt_yes}
        export FX_INSTALL_HOME="${install_home}"
        export FX_CUSTOM_PREFIX="${opt_prefix_path}"
        export FX_BIN="$FX_BIN"
        if [[ ! "\$PATH" =~ "\$FX_INSTALL_HOME\\bin" ]]; then
          export PATH=\$PATH:\$FX_INSTALL_HOME\\bin;
        fi
EOF
    )";
    echo "$data"
  }


  config_make(){
    local src data ret=1
    #echo -ne "Saving $1 file..."
    src="$1"
    if [ -n $src ]; then
      data="$(config_file_str)"
      echo -e "$data" > ${src}

      if [ -f "${src}" ]; then
        if ! grep -q 'source .*/bashfx\-install\.conf' $profile_src; then
          echo "source ${install_home}/bashfx-install.conf" >> $profile_src
          ret=$?
        else
          #echo "source line already added"
          ret=0
        fi
      else
       ret=1 
      fi
    fi
    return $ret
  }




#-------------------------------------------------------------------------------
# Main
#-------------------------------------------------------------------------------

if [ $# -gt 0 ]; then 
  __logo
  __printf "BASHFX v3\n\n"

  #pre nuke install directory
  if [ $opt_clean -eq 0 ]; then
    __printf "-> ${col_blue}oO.0oo. Cleaning 0o.o.0.oo0O. ${col_x}"
    [ -d "$install_home" ] && rm -rf "$install_home" || :;
    if grep -q 'source .*/bashfx\-install\.conf' $profile_src; then
      sed -i.bak '/source .*bashfx-install\.conf/d' "$HOME/.profile"
      
    fi
  fi

  #run in safe mode (download script)
  if [ $opt_safe -eq 0 ]; then

    __printf "-> Running BASHFX setup in ${col_orange}--safe${col_end} mode."

    # countdown=100
    # while [ $countdown -gt 0 ]; do
    #   echo -ne "Continue? $countdown\033[0K\r"
    #   if read -r -t 1 -n 1; then
    #     exit 0
    #   fi
    #   : $((countdown--))
    # done

    #setup an obvious install path

    case "$install_path" in
      *"$HOME"*) : ;;
      *) echo -ne "${col_red}Error: Install path must be in home!${col_end}"; exit 1;;
    esac

    mkdir -p "$install_path" 

    if [ $opt_prefix -eq 0 ]; then
      __printf "-> Custom Prefix ${opt_prefix_path}"
    else
      opt_prefix_path="$HOME/Z_BASHFX"
      __printf "-> Default Prefix ${col_orange}${opt_prefix_path}${col_end}"
    fi 
    

    
    #check we could create it
    if [ -d $install_path ]; then

      cd $install_path;

      #get file
      curl -sS -L -o "${install_path}/fx-install.sh" https://git.io/fx-install
      chmod +x "fx-install.sh"
      case ":$install_path:" in
        *":$PATH:"*) 
          : 
        ;;
        *)  
          PATH="$PATH:${install_path}"
        ;;
      esac

      fqp=$(which fx-install.sh)

      if [ -n "$fqp" -a -x "fx-install.sh" ] ; then

        if config_make "${install_home}/bashfx-install.conf"; then
          __printf "-> ${col_green}Setup complete.${col_x}\n"
          __printf "To install run: ${col_blue}fx-install.sh install${col_x}"


          
        else
          __printf "Error."
        fi
      else
        echo "Error: fx-install.sh not executable\n"
      fi


    else
      echo "Error: Cant create install directory ($install_path)"
    fi
    

    exit 0


  fi

  if [ $opt_debug -eq 0 ]; then   
    __printf "-> ${col_blue}Debug.${col_x}\n"
    __printf "\n"
    __printf "-> ${col_blue}Config file:${col_x}\n"
    cat "${install_home}/bashfx-install.conf"
    __printf "\n"
    __printf "-> ${col_blue}Profile:${col_x}\n"
    cat "$HOME/.profile"
  fi    

else
  __printf "-> ${col_red}Zzz.. Nothing to do${col_x}\n"
fi
