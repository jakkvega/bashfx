#!/usr/bin/env bash
#===============================================================================
#
#  ________  ________  ________  ___  ___  ________ ___    ___ 
# |\   __  \|\   __  \|\   ____\|\  \|\  \|\  _____|\  \  /  /|
# \ \  \|\ /\ \  \|\  \ \  \___|\ \  \\\  \ \  \__/\ \  \/  / /
#  \ \   __  \ \   __  \ \_____  \ \   __  \ \   __\\ \    / / 
#   \ \  \|\  \ \  \ \  \|____|\  \ \  \ \  \ \  \_| /     \/  
#    \ \_______\ \__\ \__\____\_\  \ \__\ \__\ \__\ /  /\   \  
#     \|_______|\|__|\|__|\_________\|__|\|__|\|__|/__/ /\ __\ 
#                        \|_________|              |__|/ \|__| 
#                                                             
#-------------------------------------------------------------------------------
#$ name:bashfx-setup
#$ author:qodeninja
#$ date:
#$ semver:
#$ autobuild: 00005
#-------------------------------------------------------------------------------
#=====================================code!=====================================

#-------------------------------------------------------------------------------
# Deps
#-------------------------------------------------------------------------------

#--> sed curl chmod

#-------------------------------------------------------------------------------
# Vars and Paths
#-------------------------------------------------------------------------------
install_home="$HOME/Z_BASHFX_INSTALL"
install_path="$install_home/bin"

#-------------------------------------------------------------------------------
# Term Colors
#-------------------------------------------------------------------------------
col_red="\x1b[38;5;198m"
col_green="\x1b[38;5;34m"
col_orange="\x1b[38;5;208m"
col_blue="\x1b[38;5;32m"
col_end="\x1b[1;0m"

__logo(){
  local logo=$(sed -n '3,12 p' $BASH_SOURCE)
  printf "\n${col_blue}${logo//#/ }${col_end}\n" 1>&2;
}

__printf(){
  local text=${1:-}; 
  [ -n "$text" ] && printf "%b" "${text}\n" 1>&2 || :
}

#-------------------------------------------------------------------------------
# Options
#-------------------------------------------------------------------------------

opt_yes=1
opt_safe=1
opt_debug=1
opt_clean=1
opt_prefix=1
opt_prefix_path=""


while [[ $# -gt 0 ]]; do
  case $1 in
    --safe)
      opt_safe=0;
      shift 
      ;;
    --clean)
      opt_clean=0;
      shift 
      ;;
    --yes)
      opt_yes=0;
      shift 
      ;;
    --debug)
      opt_debug=0;
      shift 
      ;;
    --prefix)
      opt_prefix=0;
      opt_prefix_path="$2";
      shift 
      shift 
      ;;
    *)
      shift 
      ;;
  esac
done

#pre nuke install directory
if [ $opt_clean -eq 0 ]; then
  [ -d "$install_home" ] && rm -rf "$install_home" || :;
fi

#run in safe mode (download script)
if [ $opt_safe -eq 0 ]; then

  __logo
  __printf "BASHFX v3\n\n"
  __printf "-> Running BASHFX setup in ${col_orange}--safe${col_end} mode."

  # countdown=100
  # while [ $countdown -gt 0 ]; do
  #   echo -ne "Continue? $countdown\033[0K\r"
  #   if read -r -t 1 -n 1; then
  #     exit 0
  #   fi
  #   : $((countdown--))
  # done

  #setup an obvious install path

  case "$install_path" in
    *"$HOME"*) : ;;
    *) echo -ne "${col_red}Error: Install path must be in home!${col_end}"; exit 1;;
  esac

  mkdir -p "$install_path" 

  if [ $opt_prefix -eq 0 ]; then
    __printf "-> Custom Prefix ${opt_prefix_path}"
  fi 
  

#       data="$(cat <<-EOF
# ### bashfx install -  $(date)
# FX_INSTALL_YES_MODE=${opt_yes}
# FX_INSTALL_HOME="${install_home}"
# FX_INSTALL_PREFIX=""
# ########
# EOF
#       )";


  
  #check we could create it
  if [ -d $install_path ]; then

    cd $install_path;

    #get file
    curl -sS -L -o "${install_path}/fx-install.sh" https://git.io/fx-install
    chmod +x "fx-install.sh"
    case ":$install_path:" in
      *":$PATH:"*) 
        : 
      ;;
      *)  
        PATH="$PATH:${install_path}"
      ;;
    esac

    fqp=$(which fx-install.sh)

    if [ -n "$fqp" -a -x "fx-install.sh" ] ; then
      __printf "-> ${col_green}Setup complete.${col_x}"
      __printf "-> Run: ${col_blue}fx-install.sh install${col_x}"
    else
      echo "Error: fx-install.sh not executable\n"
    fi


  else
    echo "Error: Cant create install directory ($install_path)"
  fi
  

  exit 0

else
  echo "(Unsafe) Install mode not enabled at this time."
fi
